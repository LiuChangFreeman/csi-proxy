name: Windows Tests
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  integration_tests:
    strategy:
      matrix:
        go-versions: [1.13.x]
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build
        run: |
          go build -v -a -o ./bin/csi-proxy.exe ./cmd/csi-proxy
          go build -v -a -o ./bin/csi-proxy-api-gen.exe ./cmd/csi-proxy-api-gen
      - name: Run Windows Integration Tests
        run: |
          # start the CSI Proxy before running tests on windows
          Start-Job -Name CSIProxy -ScriptBlock {
            .\bin\csi-proxy.exe
          };
          Start-Sleep -Seconds 30;
          Write-Output "getting named pipes"
          [System.IO.Directory]::GetFiles("\\.\\pipe\\")
          $env:CSI_PROXY_GH_ACTIONS="TRUE"
          go test -v -race ./integrationtests/...
  unit_tests:
    strategy:
      matrix:
        go-versions: [1.13.x]
        platform: [windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run Windows Unit Tests
        run: |
          go test -v -race ./pkg/...

  bump_version_test:
    strategy:
      matrix:
        go-versions: [1.16.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run bump version script
        run: |
          API_GROUP=filesystem OLD_API_VERSION=v1beta2 NEW_API_VERSION=v99 scripts/bump-version.sh
